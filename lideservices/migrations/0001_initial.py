# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-09-21 14:44
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Aliquot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('aliquot', models.IntegerField()),
                ('frozen', models.BooleanField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='aliquot_creator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_aliquot',
            },
        ),
        migrations.CreateModel(
            name='AnalysisBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('analysis_batch_description', models.CharField(blank=True, max_length=128, null=True)),
                ('analysis_batch_notes', models.CharField(blank=True, max_length=128, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analysisbatch_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analysisbatch_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_analysisbatch',
            },
        ),
        migrations.CreateModel(
            name='AnalysisBatchTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('description', models.TextField(blank=True)),
                ('extraction_volume', models.FloatField(blank=True, null=True)),
                ('elution_volume', models.FloatField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analysisbatchtemplate_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analysisbatchtemplate_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_analysisbatchtemplate',
            },
        ),
        migrations.CreateModel(
            name='ConcentrationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='concentrationtype_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='concentrationtype_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_concentrationtype',
            },
        ),
        migrations.CreateModel(
            name='Control',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('qc_value', models.FloatField(blank=True, null=True)),
                ('qc_flag', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='control_creator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_control',
            },
        ),
        migrations.CreateModel(
            name='ControlType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('abbreviation', models.CharField(blank=True, max_length=128, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='controltype_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='controltype_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_controltype',
            },
        ),
        migrations.CreateModel(
            name='Extraction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('extraction_number', models.IntegerField(unique=True)),
                ('extraction_volume', models.FloatField(blank=True, null=True)),
                ('elution_volume', models.FloatField(blank=True, null=True)),
                ('extraction_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('analysis_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extractions', to='lideservices.AnalysisBatch')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extraction_creator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_extraction',
            },
        ),
        migrations.CreateModel(
            name='ExtractionInhibition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extractioninhibition_creator', to=settings.AUTH_USER_MODEL)),
                ('extraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lideservices.Extraction')),
            ],
            options={
                'db_table': 'lide_extractioninhibition',
            },
        ),
        migrations.CreateModel(
            name='ExtractionMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extractionmethod_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extractionmethod_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_extractionmethod',
            },
        ),
        migrations.CreateModel(
            name='FilterType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='filtertype_creator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_filtertype',
            },
        ),
        migrations.CreateModel(
            name='FinalConcentratedSampleVolume',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('final_concentrated_sample_volume', models.FloatField(blank=True, null=True)),
                ('final_concentrated_sample_volume_notes', models.TextField(blank=True)),
                ('concentration_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='final_concentrated_sample_volumes', to='lideservices.ConcentrationType')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='finalconcentratedsamplevolume_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='finalconcentratedsamplevolume_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_finalconcentratedsamplevolume',
            },
        ),
        migrations.CreateModel(
            name='Freezer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('racks', models.IntegerField()),
                ('boxes', models.IntegerField()),
                ('rows', models.IntegerField()),
                ('spots', models.IntegerField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='freezer_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='freezer_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_freezer',
            },
        ),
        migrations.CreateModel(
            name='FreezerLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('rack', models.IntegerField()),
                ('box', models.IntegerField()),
                ('row', models.IntegerField()),
                ('spot', models.IntegerField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='freezerlocation_creator', to=settings.AUTH_USER_MODEL)),
                ('freezer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='freezerlocations', to='lideservices.Freezer')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='freezerlocation_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_freezer_location',
            },
        ),
        migrations.CreateModel(
            name='Inhibition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('inhibition_number', models.IntegerField(unique=True)),
                ('type', models.CharField(blank=True, max_length=128, null=True)),
                ('dilution', models.FloatField(blank=True, null=True)),
                ('inhibition_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inhibition_creator', to=settings.AUTH_USER_MODEL)),
                ('extraction', models.ManyToManyField(related_name='inhibitions', through='lideservices.ExtractionInhibition', to='lideservices.Extraction')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inhibition_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_inhibition',
            },
        ),
        migrations.CreateModel(
            name='MatrixType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('code', models.CharField(max_length=128, unique=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='matrixtype_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='matrixtype_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_matrixtype',
            },
        ),
        migrations.CreateModel(
            name='OtherAnalysis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('data', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='otheranalysis_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='otheranalysis_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_otheranalysis',
            },
        ),
        migrations.CreateModel(
            name='PCRReplicate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('replicate', models.IntegerField()),
                ('cycle_of_quantification', models.FloatField(blank=True, null=True)),
                ('guanine_cytosine_content_reaction', models.FloatField(blank=True, null=True)),
                ('concentration', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lide_pcrreplicate',
            },
        ),
        migrations.CreateModel(
            name='ReverseTranscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('rt_number', models.IntegerField(unique=True)),
                ('volume_in', models.FloatField(blank=True, null=True)),
                ('volume_out', models.FloatField(blank=True, null=True)),
                ('cycle_of_quantification', models.FloatField(blank=True, null=True)),
                ('rt_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reversetranscription_creator', to=settings.AUTH_USER_MODEL)),
                ('extraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reverse_transcriptions', to='lideservices.Extraction')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reversetranscription_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_reversetranscription',
            },
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('study_site_name', models.CharField(blank=True, max_length=128, null=True)),
                ('collaborator_sample_id', models.CharField(max_length=128, unique=True)),
                ('sample_notes', models.TextField(blank=True)),
                ('sample_description', models.TextField(blank=True)),
                ('arrival_date', models.DateField(blank=True, null=True)),
                ('arrival_notes', models.TextField(blank=True)),
                ('collection_start_date', models.DateField(blank=True, null=True)),
                ('collection_start_time', models.TimeField(blank=True, null=True)),
                ('collection_end_date', models.DateField(blank=True, null=True)),
                ('collection_end_time', models.TimeField(blank=True, null=True)),
                ('meter_reading_initial', models.FloatField(blank=True, null=True)),
                ('meter_reading_final', models.FloatField(blank=True, null=True)),
                ('total_volume_sampled_initial', models.FloatField(blank=True, null=True)),
                ('total_volume_sampled', models.FloatField(blank=True, null=True)),
                ('sample_volume_initial', models.FloatField(blank=True, null=True)),
                ('sample_volume_filtered', models.FloatField(blank=True, null=True)),
                ('filter_born_on_date', models.DateField(blank=True, null=True)),
                ('filter_flag', models.BooleanField(default=False)),
                ('secondary_concentration_flag', models.BooleanField(default=False)),
                ('elution_date', models.DateField(blank=True, null=True)),
                ('elution_notes', models.TextField(blank=True)),
                ('technician_initials', models.CharField(blank=True, max_length=4, null=True)),
                ('air_subsample_volume', models.FloatField(blank=True, null=True)),
                ('post_dilution_volume', models.FloatField(blank=True, null=True)),
                ('pump_flow_rate', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lide_sample',
            },
        ),
        migrations.CreateModel(
            name='SampleAnalysisBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('analysis_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lideservices.AnalysisBatch')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sampleanalysisbatch_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sampleanalysisbatch_modifier', to=settings.AUTH_USER_MODEL)),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lideservices.Sample')),
            ],
            options={
                'db_table': 'lide_sampleanalysisbatch',
            },
        ),
        migrations.CreateModel(
            name='SampleGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='samplegroup_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='samplegroup_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_samplegroup',
            },
        ),
        migrations.CreateModel(
            name='SampleSampleGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='samplesamplegroup_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='samplesamplegroup_modifier', to=settings.AUTH_USER_MODEL)),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lideservices.Sample')),
                ('samplegroup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lideservices.SampleGroup')),
            ],
            options={
                'db_table': 'lide_samplesamplegroup',
            },
        ),
        migrations.CreateModel(
            name='SampleType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('code', models.CharField(max_length=128, unique=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sampletype_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sampletype_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_sampletype',
            },
        ),
        migrations.CreateModel(
            name='StandardCurve',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('r_value', models.FloatField(blank=True, null=True)),
                ('slope', models.FloatField(blank=True, null=True)),
                ('efficiency', models.FloatField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='standardcurve_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='standardcurve_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_standardcurve',
            },
        ),
        migrations.CreateModel(
            name='Study',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='study_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='study_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_study',
            },
        ),
        migrations.CreateModel(
            name='Target',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('abbreviation', models.CharField(blank=True, max_length=128, null=True)),
                ('type', models.CharField(blank=True, max_length=128, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='target_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='target_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_target',
            },
        ),
        migrations.CreateModel(
            name='UnitType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='unittype_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='unittype_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_unittype',
            },
        ),
        migrations.AddField(
            model_name='sample',
            name='analysisbatches',
            field=models.ManyToManyField(related_name='sampleanalysisbatches', through='lideservices.SampleAnalysisBatch', to='lideservices.AnalysisBatch'),
        ),
        migrations.AddField(
            model_name='sample',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sample_creator', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='sample',
            name='filter_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='lideservices.FilterType'),
        ),
        migrations.AddField(
            model_name='sample',
            name='matrix_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='lideservices.MatrixType'),
        ),
        migrations.AddField(
            model_name='sample',
            name='meter_reading_unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='samples_meter_units', to='lideservices.UnitType'),
        ),
        migrations.AddField(
            model_name='sample',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sample_modifier', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='sample',
            name='sample_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='lideservices.SampleType'),
        ),
        migrations.AddField(
            model_name='sample',
            name='samplegroups',
            field=models.ManyToManyField(related_name='samples', through='lideservices.SampleSampleGroup', to='lideservices.SampleGroup'),
        ),
        migrations.AddField(
            model_name='sample',
            name='sampler_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sampler_name', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='sample',
            name='study',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='lideservices.Study'),
        ),
        migrations.AddField(
            model_name='sample',
            name='total_volume_sampled_unit_initial',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='samples_tvs_units', to='lideservices.UnitType'),
        ),
        migrations.AddField(
            model_name='pcrreplicate',
            name='concentration_unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pcr_replicates', to='lideservices.UnitType'),
        ),
        migrations.AddField(
            model_name='pcrreplicate',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pcrreplicate_creator', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='pcrreplicate',
            name='extraction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pcrreplicates', to='lideservices.Extraction'),
        ),
        migrations.AddField(
            model_name='pcrreplicate',
            name='inhibition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pcrreplicates', to='lideservices.Inhibition'),
        ),
        migrations.AddField(
            model_name='pcrreplicate',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pcrreplicate_modifier', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='pcrreplicate',
            name='reverse_transcription',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pcrreplicates', to='lideservices.ReverseTranscription'),
        ),
        migrations.AddField(
            model_name='pcrreplicate',
            name='target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pcrreplicates', to='lideservices.Target'),
        ),
        migrations.AddField(
            model_name='finalconcentratedsamplevolume',
            name='sample',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='final_concentrated_sample_volume', to='lideservices.Sample'),
        ),
        migrations.AddField(
            model_name='filtertype',
            name='matrix',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='filters', to='lideservices.MatrixType'),
        ),
        migrations.AddField(
            model_name='filtertype',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='filtertype_modifier', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='extractioninhibition',
            name='inhibition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lideservices.Inhibition'),
        ),
        migrations.AddField(
            model_name='extractioninhibition',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extractioninhibition_modifier', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='extraction',
            name='extraction_method',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='extractions', to='lideservices.ExtractionMethod'),
        ),
        migrations.AddField(
            model_name='extraction',
            name='inhibition',
            field=models.ManyToManyField(related_name='extractioninhibitions', through='lideservices.ExtractionInhibition', to='lideservices.Inhibition'),
        ),
        migrations.AddField(
            model_name='extraction',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extraction_modifier', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='extraction',
            name='sample',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extractions', to='lideservices.Sample'),
        ),
        migrations.AddField(
            model_name='control',
            name='extraction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='controls', to='lideservices.Extraction'),
        ),
        migrations.AddField(
            model_name='control',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='control_modifier', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='control',
            name='target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='controls', to='lideservices.Target'),
        ),
        migrations.AddField(
            model_name='control',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='controls', to='lideservices.ControlType'),
        ),
        migrations.AddField(
            model_name='analysisbatchtemplate',
            name='target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analysisbatchtemplates', to='lideservices.Target'),
        ),
        migrations.AddField(
            model_name='analysisbatch',
            name='samples',
            field=models.ManyToManyField(related_name='sampleanalysisbatches', through='lideservices.SampleAnalysisBatch', to='lideservices.Sample'),
        ),
        migrations.AddField(
            model_name='aliquot',
            name='freezer_location',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='aliquot', to='lideservices.FreezerLocation'),
        ),
        migrations.AddField(
            model_name='aliquot',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='aliquot_modifier', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='aliquot',
            name='sample',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aliquots', to='lideservices.Sample'),
        ),
        migrations.AlterUniqueTogether(
            name='samplesamplegroup',
            unique_together=set([('sample', 'samplegroup')]),
        ),
        migrations.AlterUniqueTogether(
            name='sampleanalysisbatch',
            unique_together=set([('sample', 'analysis_batch')]),
        ),
        migrations.AlterUniqueTogether(
            name='extractioninhibition',
            unique_together=set([('extraction', 'inhibition')]),
        ),
        migrations.AlterUniqueTogether(
            name='aliquot',
            unique_together=set([('sample', 'aliquot')]),
        ),
    ]
