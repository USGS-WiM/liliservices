# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2018-04-06 15:39
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Aliquot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('aliquot_number', models.IntegerField()),
                ('frozen', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='aliquot_creator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_aliquot',
            },
        ),
        migrations.CreateModel(
            name='AnalysisBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('analysis_batch_description', models.CharField(blank=True, max_length=128)),
                ('analysis_batch_notes', models.CharField(blank=True, max_length=128)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analysisbatch_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analysisbatch_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'analysisbatches',
                'db_table': 'lide_analysisbatch',
            },
        ),
        migrations.CreateModel(
            name='AnalysisBatchTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('description', models.TextField(blank=True)),
                ('extraction_volume', models.FloatField()),
                ('elution_volume', models.FloatField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analysisbatchtemplate_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analysisbatchtemplate_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_analysisbatchtemplate',
            },
        ),
        migrations.CreateModel(
            name='ConcentrationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='concentrationtype_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='concentrationtype_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_concentrationtype',
            },
        ),
        migrations.CreateModel(
            name='ExtractionBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('re_extraction_notes', models.TextField(blank=True)),
                ('extraction_number', models.IntegerField()),
                ('extraction_volume', models.FloatField()),
                ('extraction_date', models.DateField(db_index=True, default=datetime.date.today)),
                ('pcr_date', models.DateField(db_index=True, default=datetime.date.today)),
                ('qpcr_template_volume', models.FloatField(default=6)),
                ('elution_volume', models.FloatField()),
                ('sample_dilution_factor', models.IntegerField()),
                ('qpcr_reaction_volume', models.FloatField(default=20)),
                ('ext_pos_cq_value', models.FloatField(blank=True, null=True)),
                ('ext_pos_gc_reaction', models.FloatField(blank=True, null=True)),
                ('ext_pos_invalid', models.BooleanField(default=True)),
                ('analysis_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extractionbatches', to='lideservices.AnalysisBatch')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extractionbatch_creator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'extractionbatches',
                'db_table': 'lide_extractionbatch',
            },
        ),
        migrations.CreateModel(
            name='ExtractionMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extractionmethod_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extractionmethod_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_extractionmethod',
            },
        ),
        migrations.CreateModel(
            name='FieldUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('table', models.CharField(max_length=64)),
                ('field', models.CharField(max_length=64)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fieldunit_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fieldunit_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_fieldunit',
            },
        ),
        migrations.CreateModel(
            name='FilterType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='filtertype_creator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_filtertype',
            },
        ),
        migrations.CreateModel(
            name='FinalConcentratedSampleVolume',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('final_concentrated_sample_volume', models.FloatField()),
                ('notes', models.TextField(blank=True)),
                ('concentration_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='final_concentrated_sample_volumes', to='lideservices.ConcentrationType')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='finalconcentratedsamplevolume_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='finalconcentratedsamplevolume_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_finalconcentratedsamplevolume',
            },
        ),
        migrations.CreateModel(
            name='Freezer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('racks', models.IntegerField()),
                ('boxes', models.IntegerField()),
                ('rows', models.IntegerField()),
                ('spots', models.IntegerField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='freezer_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='freezer_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_freezer',
            },
        ),
        migrations.CreateModel(
            name='FreezerLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('rack', models.IntegerField()),
                ('box', models.IntegerField()),
                ('row', models.IntegerField()),
                ('spot', models.IntegerField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='freezerlocation_creator', to=settings.AUTH_USER_MODEL)),
                ('freezer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='freezerlocations', to='lideservices.Freezer')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='freezerlocation_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_freezer_location',
            },
        ),
        migrations.CreateModel(
            name='Inhibition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('inhibition_date', models.DateField(db_index=True, default=datetime.date.today)),
                ('dilution_factor', models.IntegerField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inhibition_creator', to=settings.AUTH_USER_MODEL)),
                ('extraction_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inhibitions', to='lideservices.ExtractionBatch')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inhibition_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_inhibition',
            },
        ),
        migrations.CreateModel(
            name='Matrix',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('code', models.CharField(max_length=128, unique=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='matrix_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='matrix_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'matrices',
                'db_table': 'lide_matrix',
            },
        ),
        migrations.CreateModel(
            name='NucleicAcidType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='nucleicacidtype_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='nucleicacidtype_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_nucleicacidtype',
            },
        ),
        migrations.CreateModel(
            name='OtherAnalysis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('data', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='otheranalysis_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='otheranalysis_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'otheranalyses',
                'db_table': 'lide_otheranalysis',
            },
        ),
        migrations.CreateModel(
            name='PCRReplicate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('cq_value', models.FloatField(blank=True, null=True)),
                ('gc_reaction', models.DecimalField(blank=True, decimal_places=100, max_digits=120, null=True)),
                ('replicate_concentration', models.DecimalField(blank=True, decimal_places=100, max_digits=120, null=True)),
                ('invalid', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'lide_pcrreplicate',
            },
        ),
        migrations.CreateModel(
            name='PCRReplicateBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('replicate_number', models.IntegerField()),
                ('notes', models.TextField(blank=True)),
                ('ext_neg_cq_value', models.FloatField(blank=True, null=True)),
                ('ext_neg_gc_reaction', models.FloatField(blank=True, null=True)),
                ('ext_neg_invalid', models.BooleanField(default=True)),
                ('rt_neg_cq_value', models.FloatField(blank=True, null=True)),
                ('rt_neg_gc_reaction', models.FloatField(blank=True, null=True)),
                ('rt_neg_invalid', models.BooleanField(default=True)),
                ('pcr_neg_cq_value', models.FloatField(blank=True, null=True)),
                ('pcr_neg_gc_reaction', models.FloatField(blank=True, null=True)),
                ('pcr_neg_invalid', models.BooleanField(default=True)),
                ('pcr_pos_cq_value', models.FloatField(blank=True, null=True)),
                ('pcr_pos_gc_reaction', models.FloatField(blank=True, null=True)),
                ('pcr_pos_invalid', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pcrreplicatebatch_creator', to=settings.AUTH_USER_MODEL)),
                ('extraction_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pcrreplicatebatches', to='lideservices.ExtractionBatch')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pcrreplicatebatch_modifier', to=settings.AUTH_USER_MODEL)),
                ('re_pcr', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pcrreplicatebatches', to='lideservices.PCRReplicateBatch')),
            ],
            options={
                'verbose_name_plural': 'pcrreplicatebatches',
                'db_table': 'lide_pcrreplicatebatch',
            },
        ),
        migrations.CreateModel(
            name='RecordType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recordtype_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recordtype_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_recordtype',
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('sample_mean_concentration', models.DecimalField(blank=True, decimal_places=100, max_digits=120, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='result_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='result_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_result',
            },
        ),
        migrations.CreateModel(
            name='ReverseTranscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('template_volume', models.FloatField()),
                ('reaction_volume', models.FloatField()),
                ('rt_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('re_rt_notes', models.TextField(blank=True)),
                ('rt_pos_cq_value', models.FloatField(blank=True, null=True)),
                ('rt_pos_gc_reaction', models.FloatField(blank=True, null=True)),
                ('rt_pos_invalid', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reversetranscription_creator', to=settings.AUTH_USER_MODEL)),
                ('extraction_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reversetranscriptions', to='lideservices.ExtractionBatch')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reversetranscription_modifier', to=settings.AUTH_USER_MODEL)),
                ('re_rt', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reversetranscriptions', to='lideservices.ReverseTranscription')),
            ],
            options={
                'db_table': 'lide_reversetranscription',
            },
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('study_site_name', models.CharField(blank=True, max_length=128, null=True)),
                ('collaborator_sample_id', models.CharField(max_length=128, unique=True)),
                ('sample_notes', models.TextField(blank=True)),
                ('sample_description', models.TextField(blank=True)),
                ('arrival_date', models.DateField(blank=True, null=True)),
                ('arrival_notes', models.TextField(blank=True)),
                ('collection_start_date', models.DateField()),
                ('collection_start_time', models.TimeField(blank=True, null=True)),
                ('collection_end_date', models.DateField(blank=True, null=True)),
                ('collection_end_time', models.TimeField(blank=True, null=True)),
                ('meter_reading_initial', models.FloatField(blank=True, null=True)),
                ('meter_reading_final', models.FloatField(blank=True, null=True)),
                ('total_volume_sampled_initial', models.FloatField(blank=True, null=True)),
                ('total_volume_or_mass_sampled', models.FloatField()),
                ('sample_volume_initial', models.FloatField(blank=True, null=True)),
                ('sample_volume_filtered', models.FloatField(blank=True, null=True)),
                ('filter_born_on_date', models.DateField(blank=True, null=True)),
                ('filter_flag', models.BooleanField(default=False)),
                ('secondary_concentration_flag', models.BooleanField(default=False)),
                ('elution_notes', models.TextField(blank=True)),
                ('technician_initials', models.CharField(blank=True, max_length=128, null=True)),
                ('dissolution_volume', models.FloatField(blank=True, null=True)),
                ('post_dilution_volume', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lide_sample',
            },
        ),
        migrations.CreateModel(
            name='SampleAnalysisBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('analysis_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lideservices.AnalysisBatch')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sampleanalysisbatch_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sampleanalysisbatch_modifier', to=settings.AUTH_USER_MODEL)),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lideservices.Sample')),
            ],
            options={
                'verbose_name_plural': 'sampleanalysisbatches',
                'db_table': 'lide_sampleanalysisbatch',
            },
        ),
        migrations.CreateModel(
            name='SampleExtraction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sampleextraction_creator', to=settings.AUTH_USER_MODEL)),
                ('extraction_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sampleextractions', to='lideservices.ExtractionBatch')),
                ('inhibition_dna', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sampleextractions_dna', to='lideservices.Inhibition')),
                ('inhibition_rna', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sampleextractions_rna', to='lideservices.Inhibition')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sampleextraction_modifier', to=settings.AUTH_USER_MODEL)),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sampleextractions', to='lideservices.Sample')),
            ],
            options={
                'db_table': 'lide_sampleextraction',
            },
        ),
        migrations.CreateModel(
            name='SampleGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='samplegroup_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='samplegroup_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_samplegroup',
            },
        ),
        migrations.CreateModel(
            name='SampleSampleGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='samplesamplegroup_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='samplesamplegroup_modifier', to=settings.AUTH_USER_MODEL)),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lideservices.Sample')),
                ('samplegroup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lideservices.SampleGroup')),
            ],
            options={
                'db_table': 'lide_samplesamplegroup',
            },
        ),
        migrations.CreateModel(
            name='SampleType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('code', models.CharField(max_length=128, unique=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sampletype_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sampletype_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_sampletype',
            },
        ),
        migrations.CreateModel(
            name='StandardCurve',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('r_value', models.FloatField(blank=True, null=True)),
                ('slope', models.FloatField(blank=True, null=True)),
                ('efficiency', models.FloatField(blank=True, null=True)),
                ('pos_ctrl_cq', models.FloatField(blank=True, null=True)),
                ('pos_ctrl_cq_range', models.FloatField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='standardcurve_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='standardcurve_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_standardcurve',
            },
        ),
        migrations.CreateModel(
            name='Study',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='study_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='study_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'studies',
                'db_table': 'lide_study',
            },
        ),
        migrations.CreateModel(
            name='Target',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('code', models.CharField(max_length=128, unique=True)),
                ('notes', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='target_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='target_modifier', to=settings.AUTH_USER_MODEL)),
                ('nucleic_acid_type', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='lideservices.NucleicAcidType')),
            ],
            options={
                'db_table': 'lide_target',
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('symbol', models.CharField(max_length=128, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='unit_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='unit_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_unit',
            },
        ),
        migrations.AddField(
            model_name='sample',
            name='analysisbatches',
            field=models.ManyToManyField(related_name='sampleanalysisbatches', through='lideservices.SampleAnalysisBatch', to='lideservices.AnalysisBatch'),
        ),
        migrations.AddField(
            model_name='sample',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sample_creator', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='sample',
            name='filter_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='lideservices.FilterType'),
        ),
        migrations.AddField(
            model_name='sample',
            name='matrix',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='lideservices.Matrix'),
        ),
        migrations.AddField(
            model_name='sample',
            name='meter_reading_unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='samples_meter_units', to='lideservices.Unit'),
        ),
        migrations.AddField(
            model_name='sample',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sample_modifier', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='sample',
            name='peg_neg',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='lideservices.Sample'),
        ),
        migrations.AddField(
            model_name='sample',
            name='record_type',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='lideservices.RecordType'),
        ),
        migrations.AddField(
            model_name='sample',
            name='sample_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='lideservices.SampleType'),
        ),
        migrations.AddField(
            model_name='sample',
            name='samplegroups',
            field=models.ManyToManyField(related_name='samples', through='lideservices.SampleSampleGroup', to='lideservices.SampleGroup'),
        ),
        migrations.AddField(
            model_name='sample',
            name='sampler_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sampler_name', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='sample',
            name='study',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='lideservices.Study'),
        ),
        migrations.AddField(
            model_name='sample',
            name='total_volume_sampled_unit_initial',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='samples_tvs_units', to='lideservices.Unit'),
        ),
        migrations.AddField(
            model_name='result',
            name='sample',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='lideservices.Sample'),
        ),
        migrations.AddField(
            model_name='result',
            name='target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='lideservices.Target'),
        ),
        migrations.AddField(
            model_name='pcrreplicatebatch',
            name='target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pcrreplicatebatches', to='lideservices.Target'),
        ),
        migrations.AddField(
            model_name='pcrreplicate',
            name='concentration_unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pcrreplicates', to='lideservices.Unit'),
        ),
        migrations.AddField(
            model_name='pcrreplicate',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pcrreplicate_creator', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='pcrreplicate',
            name='invalid_override',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pcrreplicates', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='pcrreplicate',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pcrreplicate_modifier', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='pcrreplicate',
            name='pcrreplicate_batch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pcrreplicates', to='lideservices.PCRReplicateBatch'),
        ),
        migrations.AddField(
            model_name='pcrreplicate',
            name='sample_extraction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pcrreplicates', to='lideservices.SampleExtraction'),
        ),
        migrations.AddField(
            model_name='inhibition',
            name='nucleic_acid_type',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='lideservices.NucleicAcidType'),
        ),
        migrations.AddField(
            model_name='inhibition',
            name='sample',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inhibitions', to='lideservices.Sample'),
        ),
        migrations.AddField(
            model_name='finalconcentratedsamplevolume',
            name='sample',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='final_concentrated_sample_volume', to='lideservices.Sample'),
        ),
        migrations.AddField(
            model_name='filtertype',
            name='matrix',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='filters', to='lideservices.Matrix'),
        ),
        migrations.AddField(
            model_name='filtertype',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='filtertype_modifier', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='fieldunit',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fieldunits', to='lideservices.Unit'),
        ),
        migrations.AddField(
            model_name='extractionbatch',
            name='extraction_method',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extractionbatches', to='lideservices.ExtractionMethod'),
        ),
        migrations.AddField(
            model_name='extractionbatch',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extractionbatch_modifier', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='extractionbatch',
            name='re_extraction',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extractionbatches', to='lideservices.ExtractionBatch'),
        ),
        migrations.AddField(
            model_name='analysisbatchtemplate',
            name='target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analysisbatchtemplates', to='lideservices.Target'),
        ),
        migrations.AddField(
            model_name='analysisbatch',
            name='samples',
            field=models.ManyToManyField(related_name='sampleanalysisbatches', through='lideservices.SampleAnalysisBatch', to='lideservices.Sample'),
        ),
        migrations.AddField(
            model_name='aliquot',
            name='freezer_location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aliquot', to='lideservices.FreezerLocation'),
        ),
        migrations.AddField(
            model_name='aliquot',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='aliquot_modifier', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='aliquot',
            name='sample',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aliquots', to='lideservices.Sample'),
        ),
        migrations.AlterUniqueTogether(
            name='samplesamplegroup',
            unique_together=set([('sample', 'samplegroup')]),
        ),
        migrations.AlterUniqueTogether(
            name='sampleextraction',
            unique_together=set([('sample', 'extraction_batch')]),
        ),
        migrations.AlterUniqueTogether(
            name='sampleanalysisbatch',
            unique_together=set([('sample', 'analysis_batch')]),
        ),
        migrations.AlterUniqueTogether(
            name='reversetranscription',
            unique_together=set([('extraction_batch', 're_rt')]),
        ),
        migrations.AlterUniqueTogether(
            name='result',
            unique_together=set([('sample', 'target')]),
        ),
        migrations.AlterUniqueTogether(
            name='pcrreplicatebatch',
            unique_together=set([('extraction_batch', 'target', 'replicate_number', 're_pcr')]),
        ),
        migrations.AlterUniqueTogether(
            name='pcrreplicate',
            unique_together=set([('sample_extraction', 'pcrreplicate_batch')]),
        ),
        migrations.AlterUniqueTogether(
            name='inhibition',
            unique_together=set([('sample', 'extraction_batch', 'nucleic_acid_type')]),
        ),
        migrations.AlterUniqueTogether(
            name='freezerlocation',
            unique_together=set([('freezer', 'rack', 'box', 'row', 'spot')]),
        ),
        migrations.AlterUniqueTogether(
            name='extractionbatch',
            unique_together=set([('analysis_batch', 'extraction_number', 're_extraction')]),
        ),
        migrations.AlterUniqueTogether(
            name='aliquot',
            unique_together=set([('sample', 'aliquot_number')]),
        ),
    ]
