# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-06-04 06:49
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalysisBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('some_field', models.CharField(blank=True, max_length=128, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analysisbatch_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analysisbatch_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_analysisbatch',
            },
        ),
        migrations.CreateModel(
            name='Control',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('cycle_of_quantification', models.FloatField(blank=True, null=True)),
                ('control_date', models.DateField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='control_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='control_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_control',
            },
        ),
        migrations.CreateModel(
            name='ControlType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('abbreviation', models.CharField(blank=True, max_length=128, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='controltype_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='controltype_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_controltype',
            },
        ),
        migrations.CreateModel(
            name='Extraction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('extraction_code', models.IntegerField(unique=True)),
                ('extraction_date', models.DateField(blank=True, null=True)),
                ('analysis_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extractions', to='lideservices.AnalysisBatch')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extraction_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extraction_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_extraction',
            },
        ),
        migrations.CreateModel(
            name='FilterType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('matrix', models.CharField(blank=True, max_length=128, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='filtertype_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='filtertype_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_filtertype',
            },
        ),
        migrations.CreateModel(
            name='Inhibition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('type', models.CharField(blank=True, max_length=128, null=True)),
                ('dilution', models.FloatField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inhibition_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inhibition_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_inhibition',
            },
        ),
        migrations.CreateModel(
            name='OtherAnalysis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('data', models.TextField(blank=True)),
                ('other_analysis_date', models.DateField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='otheranalysis_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='otheranalysis_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_otheranalysis',
            },
        ),
        migrations.CreateModel(
            name='PCRReplicate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('replicate', models.IntegerField()),
                ('pcr_date', models.DateField(blank=True, null=True)),
                ('cycle_of_quantification', models.FloatField(blank=True, null=True)),
                ('gc_rxn', models.FloatField(blank=True, null=True)),
                ('concentration', models.FloatField(blank=True, null=True)),
                ('sample_mean_concentration', models.FloatField(blank=True, null=True)),
                ('concentration_unit', models.CharField(blank=True, max_length=128, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pcrreplicate_creator', to=settings.AUTH_USER_MODEL)),
                ('extraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pcrreplicates', to='lideservices.Extraction')),
                ('inhibition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pcrreplicates', to='lideservices.Inhibition')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pcrreplicate_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_pcrreplicate',
            },
        ),
        migrations.CreateModel(
            name='ReverseTranscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('volume_in', models.FloatField(blank=True, null=True)),
                ('volume_out', models.FloatField(blank=True, null=True)),
                ('cycle_of_quantification', models.FloatField(blank=True, null=True)),
                ('reverse_transcription_date', models.DateField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reversetranscription_creator', to=settings.AUTH_USER_MODEL)),
                ('extraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reversetranscriptions', to='lideservices.Extraction')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reversetranscription_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_reversetranscription',
            },
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('study_site_name', models.CharField(blank=True, max_length=128, null=True)),
                ('study_site_id', models.IntegerField()),
                ('collaborator_sample_id', models.IntegerField(unique=True)),
                ('sampler_name', models.CharField(blank=True, max_length=128, null=True)),
                ('notes', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('collect_start_date', models.DateField(blank=True, null=True)),
                ('collect_start_time', models.TimeField(blank=True, null=True)),
                ('collect_end_date', models.DateField(blank=True, null=True)),
                ('collect_end_time', models.TimeField(blank=True, null=True)),
                ('meter_reading_initial', models.FloatField(blank=True, null=True)),
                ('meter_reading_final', models.FloatField(blank=True, null=True)),
                ('meter_reading_unit', models.CharField(blank=True, max_length=128, null=True)),
                ('total_volume_sampled_initial', models.FloatField(blank=True, null=True)),
                ('total_volume_sampled_unit_initial', models.CharField(blank=True, max_length=128, null=True)),
                ('total_volume_sampled', models.FloatField(blank=True, null=True)),
                ('total_volume_sampled_stage', models.FloatField(blank=True, null=True)),
                ('total_volume_sampled_calculation', models.FloatField(blank=True, null=True)),
                ('total_volume_sampled_stage_calculation', models.FloatField(blank=True, null=True)),
                ('filtered_volume', models.FloatField(blank=True, null=True)),
                ('filter_born_on_date', models.DateField(blank=True, null=True)),
                ('matrix', models.CharField(blank=True, max_length=128, null=True)),
                ('filter_flag', models.BooleanField(default=False)),
                ('secondary_concentration_flag', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'lide_sample',
            },
        ),
        migrations.CreateModel(
            name='SampleAnalysisBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('analysis_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lideservices.AnalysisBatch')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sampleanalysisbatch_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sampleanalysisbatch_modifier', to=settings.AUTH_USER_MODEL)),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lideservices.Sample')),
            ],
            options={
                'db_table': 'lide_sampleanalysisbatch',
            },
        ),
        migrations.CreateModel(
            name='SampleEnvironment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sampleenvironment_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sampleenvironment_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_sampleenvironment',
            },
        ),
        migrations.CreateModel(
            name='SampleLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='samplelocation_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='samplelocation_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_samplelocation',
            },
        ),
        migrations.CreateModel(
            name='SampleType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sampletype_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sampletype_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_sampletype',
            },
        ),
        migrations.CreateModel(
            name='StandardCurve',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('r_value', models.FloatField(blank=True, null=True)),
                ('slope', models.FloatField(blank=True, null=True)),
                ('efficiency', models.CharField(blank=True, max_length=128, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='standardcurve_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='standardcurve_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_standardcurve',
            },
        ),
        migrations.CreateModel(
            name='Study',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='study_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='study_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_study',
            },
        ),
        migrations.CreateModel(
            name='Target',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('abbreviation', models.CharField(blank=True, max_length=128, null=True)),
                ('type', models.CharField(blank=True, max_length=128, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='target_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='target_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_target',
            },
        ),
        migrations.CreateModel(
            name='WaterType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, db_index=True, default=datetime.date.today, null=True)),
                ('modified_date', models.DateField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='watertype_creator', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='watertype_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lide_watertype',
            },
        ),
        migrations.AddField(
            model_name='sample',
            name='analysisbatches',
            field=models.ManyToManyField(related_name='sampleanalysisbatches', through='lideservices.SampleAnalysisBatch', to='lideservices.AnalysisBatch'),
        ),
        migrations.AddField(
            model_name='sample',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sample_creator', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='sample',
            name='filter_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='lideservices.FilterType'),
        ),
        migrations.AddField(
            model_name='sample',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sample_modifier', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='sample',
            name='sample_environment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='lideservices.SampleEnvironment'),
        ),
        migrations.AddField(
            model_name='sample',
            name='sample_location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='lideservices.SampleLocation'),
        ),
        migrations.AddField(
            model_name='sample',
            name='sample_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='lideservices.SampleType'),
        ),
        migrations.AddField(
            model_name='sample',
            name='study',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='lideservices.Study'),
        ),
        migrations.AddField(
            model_name='sample',
            name='water_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='lideservices.WaterType'),
        ),
        migrations.AddField(
            model_name='pcrreplicate',
            name='reverse_transcription',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pcrreplicates', to='lideservices.ReverseTranscription'),
        ),
        migrations.AddField(
            model_name='pcrreplicate',
            name='sample',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pcrreplicates', to='lideservices.Sample'),
        ),
        migrations.AddField(
            model_name='pcrreplicate',
            name='target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pcrreplicates', to='lideservices.Target'),
        ),
        migrations.AddField(
            model_name='control',
            name='sample',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='controls', to='lideservices.Sample'),
        ),
        migrations.AddField(
            model_name='control',
            name='target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='controls', to='lideservices.Target'),
        ),
        migrations.AddField(
            model_name='control',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='controls', to='lideservices.ControlType'),
        ),
        migrations.AddField(
            model_name='analysisbatch',
            name='samples',
            field=models.ManyToManyField(related_name='sampleanalysisbatches', through='lideservices.SampleAnalysisBatch', to='lideservices.Sample'),
        ),
        migrations.AlterUniqueTogether(
            name='sampleanalysisbatch',
            unique_together=set([('sample', 'analysis_batch')]),
        ),
    ]
